"use client";

import { AdminProvider } from "@admin/client/context";
import Router from "../Router";
import ThemeProvider from "@admin/client/ThemeProvider";

import {
  isServer,
  QueryClient,
  QueryCache,
  QueryClientProvider,
} from "@tanstack/react-query";


export default function Client(props) {
console.log('is server', isServer);
  const queryClient = new QueryClient({
    defaultOptions: {
      queries: {
        // With SSR, we usually want to set some default staleTime
        // above 0 to avoid refetching immediately on the client
        staleTime: 60 * 1000,
      },
    },
    queryCache: new QueryCache({
      onError: (error) => {
        // eslint-disable-next-line no-console
        console.error(error);
      },
    }),
  });

  return (
    <ThemeProvider theme="dark">
      <AdminProvider {...props}>
        <QueryClientProvider client={queryClient}>
          <Router />
        </QueryClientProvider>
      </AdminProvider>
    </ThemeProvider>
  );
}
